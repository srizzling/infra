version: "3"
services:
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    command: --schedule "0 0 6 * * *" --label-enable --cleanup
  netdata:
    image: titpetric/netdata
    container_name: netdata
    restart: always
    networks:
      - traefik_proxy
    ports:
      - 19999:19999
    volumes:
      - ${USERDIR}/netdata/proc:/host/proc:ro
      - ${USERDIR}/netdata/sys:/host/sys:ro
      - ${USERDIR}/netdata/var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monitor.rule=Host(`${DOMAINNAME}`) && Path(`/monitor`)"
      - "traefik.http.routers.monitor.entrypoints=websecure"
      - "traefik.http.routers.monitor.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
  nzbhydra:
    image: ghcr.io/linuxserver/nzbhydra2
    container_name: nzbhydra
    hostname: nzbhydra
    ports:
      - "5076:5076"
    volumes:
      - ${USERDIR}/nzbhydra2:/config
      - ${USERDIR}/downloads:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzbhydra.rule=Host(`${DOMAINNAME}`) && Path(`/nzbhydra`)"
      - "traefik.http.routers.nzbhydra.entrypoints=websecure"
      - "traefik.http.routers.nzbhydra.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always
    networks:
      - traefik_proxy
  calibre:
    image: ghcr.io/linuxserver/calibre
    container_name: calibre
    hostname: calibre
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${USERDIR}/calibre/config:/config
      - ${USERDIR}/calibre/upload:/uploads
      - ${USERDIR}/calibre/plugins:/plugins
      - ${MEDIA_PATH_V2}/books:/books
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.calibre.rule=Host(`${DOMAINNAME}`) && Path(`/books`)"
      - "traefik.http.routers.calibre.entrypoints=websecure"
      - "traefik.http.routers.calibre.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - 6767:8080
      - 4545:8081
    restart: always
    networks:
      - traefik_proxy
  calibre-web:
    image: ghcr.io/linuxserver/calibre-web
    container_name: calibre-web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${USERDIR}/calibre/calibre-web:/config
      - ${MEDIA_PATH_V2}/books:/books
    restart: always
    depends_on:
      - calibre
    ports:
      - 8083:8083
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.calibre-web.rule=Host(`${DOMAINNAME}`) && Path(`/books-web`)"
      - "traefik.http.routers.calibre-web.entrypoints=websecure"
      - "traefik.http.routers.calibre-web.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    restart: always
    networks:
      - traefik_proxy
    ports:
      - "8989:8989"
    volumes:
      - ${USERDIR}/sonarr/config:/config
      - ${USERDIR}/downloads:/downloads
      - ${MEDIA_PATH}/tv:/tv
      - ${MEDIA_PATH_V2}/tv:/tv2
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`${DOMAINNAME}`) && PathPrefix(`/sonarr`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    ports:
      - "7878:7878"
    volumes:
      - ${USERDIR}/radarr/config:/config
      - ${MEDIA_PATH}/movies:/movies
      - ${MEDIA_PATH_V2}/movies:/movies2
      - ${USERDIR}/downloads:/downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`${DOMAINNAME}`); PathPrefixStrip(`/radarr`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always
  traefik:
    image: traefik:v3.0
    command:
      - "--accesslog=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.tailscale=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/run/tailscale/tailscaled.sock:/var/run/tailscale/tailscaled.sock
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - traefik_proxy
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-rtr.rule=Host(`$DOMAINNAME`)"
  nzbget:
    image: ghcr.io/linuxserver/nzbget
    container_name: nzbget
    hostname: nzbget
    ports:
      - "6789:6789"
    volumes:
      - ${USERDIR}/nzbget:/config
      - ${USERDIR}/downloads:/downloads
      - ${USERDIR}/incomplete:/incomplete-downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzbget.rule=Host(`${DOMAINNAME}`) && Path(`/nzbget`)"
      - "traefik.http.routers.nzbget.entrypoints=websecure"
      - "traefik.http.routers.nzbget.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - traefik_proxy
  librespeed:
    image: ghcr.io/linuxserver/librespeed
    container_name: librespeed
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - PASSWORD=${LIBRESPEED_PASSWORD}
    volumes:
      - ${USERDIR}/librespeed/config:/config
    ports:
      - 5678:80
    restart: always
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.speedtest.rule=Host(`${DOMAINNAME}`) && Path(`/speedtest`)"
      - "traefik.http.routers.speedtest.entrypoints=websecure"
      - "traefik.http.routers.speedtest.tls.certresolver=myresolver"
      - "com.centurylinklabs.watchtower.enable=true"
networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
